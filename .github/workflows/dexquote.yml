name: dexquote tests

on:
  push:
    branches: [ main ]
    paths:
      - "dexquote/src/**"
  pull_request:
    branches: [ main ]
    paths:
      - "dexquote/**"
  workflow_dispatch:

defaults:
  run:
    working-directory: ./dexquote

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Run cargo check
        run: | 
          cargo check --all-features

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    services:
      redis:
        image: ubuntu/redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 30073:6379
        env:
          REDIS_PASSWORD: testtest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Start Neo4j
        run: |
          ./scripts/start-neo4j.sh
      - name: Wait for Neo4j to start
        run: wget -qO- https://raw.githubusercontent.com/eficode/wait-for/$WAIT_FOR_VERSION/wait-for | sh -s -- localhost:7474 -- echo "Database is up"
        env:
          WAIT_FOR_VERSION: 4df3f9262d84cab0039c07bf861045fbb3c20ab7 # v2.2.3
      - name: Set a token address constraint
        run: |
          docker exec neo4j-container cypher-shell -u neo4j -p testtest "CREATE CONSTRAINT address_arb_constraint FOR (token:Arb) REQUIRE token.address IS UNIQUE"
      - name: Run cargo test
        run: |
          make test
        env: 
          ALCHEMY_API_KEY: ${{ secrets.ALCHEMY_API_KEY }}

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Run cargo fmt 
        run: |
          make fmt

      - name: Run cargo clippy
        run: |
          make clippy

  lines:
    name: Check source code lines
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    - name: Install loc
      run: cargo install loc
    - name: Check lines
      run: loc